# Stubs for fast_transformers_cxx (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def disable_gperf() -> None: ...
def enable_gperf(arg0: str) -> None: ...
def set_num_threads(arg0: int) -> None: ...
def set_stderr_verbose_level(arg0: int) -> None: ...

class BERTEmbedding:
    def __init__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor, arg3: Tensor, arg4: Tensor, arg5: float) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor, arg3: Tensor) -> None: ...

class BertAttention:
    def __init__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor, arg3: Tensor, arg4: Tensor, arg5: Tensor, arg6: int) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor) -> None: ...

class BertIntermediate:
    def __init__(self, arg0: Tensor, arg1: Tensor) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor) -> None: ...

class BertOutput:
    def __init__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor, arg3: Tensor) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor) -> None: ...

class PrepareBertMasks:
    def __init__(self) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor, arg2: Tensor, arg3: Tensor, arg4: Tensor) -> None: ...

class SequencePool:
    def __init__(self, arg0: str) -> None: ...
    def __call__(self, arg0: Tensor, arg1: Tensor) -> None: ...

class Tensor:
    def __init__(*args, **kwargs) -> None: ...
    def create_empty(*args, **kwargs) -> Any: ...
    def float_data(self) -> float: ...
    def from_dlpack(*args, **kwargs) -> Any: ...
    def n_dim(self) -> int: ...
    def shape(self, arg0: int) -> int: ...
    def to_dlpack(self) -> capsule: ...
